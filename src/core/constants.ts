// AgentPass Constants

// Default Configuration
export const DEFAULT_CONFIG = {
  REQUEST_TIMEOUT: 30000, // 30 seconds
  MAX_CONCURRENT_REQUESTS: 10,
  CACHE_TTL: 300, // 5 minutes
  RATE_LIMIT_WINDOW: '15m',
  RATE_LIMIT_MAX: 100,
} as const;

// HTTP Status Codes
export const HTTP_STATUS = {
  OK: 200,
  CREATED: 201,
  NO_CONTENT: 204,
  BAD_REQUEST: 400,
  UNAUTHORIZED: 401,
  FORBIDDEN: 403,
  NOT_FOUND: 404,
  METHOD_NOT_ALLOWED: 405,
  CONFLICT: 409,
  UNPROCESSABLE_ENTITY: 422,
  TOO_MANY_REQUESTS: 429,
  INTERNAL_SERVER_ERROR: 500,
  NOT_IMPLEMENTED: 501,
  BAD_GATEWAY: 502,
  SERVICE_UNAVAILABLE: 503,
} as const;

// Content Types
export const CONTENT_TYPES = {
  JSON: 'application/json',
  FORM: 'application/x-www-form-urlencoded',
  MULTIPART: 'multipart/form-data',
  TEXT: 'text/plain',
  HTML: 'text/html',
  XML: 'application/xml',
} as const;

// Discovery Strategies
export const DISCOVERY_STRATEGIES = {
  AUTO: 'auto',
  OPENAPI: 'openapi',
  CRAWL: 'crawl',
  INTROSPECT: 'introspect',
} as const;

// Supported Frameworks
export const SUPPORTED_FRAMEWORKS = {
  EXPRESS: 'express',
  FASTIFY: 'fastify',
  KOA: 'koa',
  NESTJS: 'nestjs',
  NEXTJS: 'nextjs',
  OPENAPI: 'openapi',
} as const;

// Middleware Phases
export const MIDDLEWARE_PHASES = {
  AUTH: 'auth',
  AUTHZ: 'authz',
  PRE: 'pre',
  POST: 'post',
  ERROR: 'error',
} as const;

// MCP Transport Types
export const MCP_TRANSPORTS = {
  STDIO: 'stdio',
  SSE: 'sse',
  WEBSOCKET: 'websocket',
} as const;

// Event Types
export const EVENT_TYPES = {
  DISCOVERY_START: 'discovery:start',
  DISCOVERY_ENDPOINT: 'discovery:endpoint',
  DISCOVERY_COMPLETE: 'discovery:complete',
  DISCOVERY_ERROR: 'discovery:error',
  
  MIDDLEWARE_START: 'middleware:start',
  MIDDLEWARE_COMPLETE: 'middleware:complete',
  MIDDLEWARE_ERROR: 'middleware:error',
  
  MCP_START: 'mcp:start',
  MCP_REQUEST: 'mcp:request',
  MCP_RESPONSE: 'mcp:response',
  MCP_ERROR: 'mcp:error',
} as const;

// Rate Limit Windows
export const RATE_LIMIT_WINDOWS = {
  SECOND: 1000,
  MINUTE: 60 * 1000,
  HOUR: 60 * 60 * 1000,
  DAY: 24 * 60 * 60 * 1000,
} as const;

// Cache Keys
export const CACHE_KEYS = {
  ENDPOINT: 'endpoint:',
  RESPONSE: 'response:',
  RATE_LIMIT: 'ratelimit:',
  AUTH: 'auth:',
} as const;

// JSON Schema Types
export const JSON_SCHEMA_TYPES = {
  STRING: 'string',
  NUMBER: 'number',
  INTEGER: 'integer',
  BOOLEAN: 'boolean',
  OBJECT: 'object',
  ARRAY: 'array',
  NULL: 'null',
} as const;

// Parameter Locations
export const PARAMETER_LOCATIONS = {
  PATH: 'path',
  QUERY: 'query',
  HEADER: 'header',
  BODY: 'body',
  COOKIE: 'cookie',
} as const;

// Security Schemes
export const SECURITY_SCHEMES = {
  API_KEY: 'apiKey',
  HTTP: 'http',
  OAUTH2: 'oauth2',
  OPEN_ID_CONNECT: 'openIdConnect',
} as const;

// OpenAPI Security Locations
export const SECURITY_LOCATIONS = {
  QUERY: 'query',
  HEADER: 'header',
  COOKIE: 'cookie',
} as const;

// Default Headers
export const DEFAULT_HEADERS = {
  USER_AGENT: 'AgentPass/1.0.0',
  ACCEPT: 'application/json, text/plain, */*',
  CONTENT_TYPE: 'application/json',
} as const;

// Error Codes
export const ERROR_CODES = {
  AGENTPASS_ERROR: 'AGENTPASS_ERROR',
  DISCOVERY_ERROR: 'DISCOVERY_ERROR',
  MCP_ERROR: 'MCP_ERROR',
  MIDDLEWARE_ERROR: 'MIDDLEWARE_ERROR',
  VALIDATION_ERROR: 'VALIDATION_ERROR',
  AUTH_ERROR: 'AUTH_ERROR',
  RATE_LIMIT_ERROR: 'RATE_LIMIT_ERROR',
  TIMEOUT_ERROR: 'TIMEOUT_ERROR',
} as const;

// Tool Naming Strategies
export const TOOL_NAMING_STRATEGIES = {
  CAMEL_CASE: 'camelCase',
  SNAKE_CASE: 'snake_case',
  KEBAB_CASE: 'kebab-case',
  PASCAL_CASE: 'PascalCase',
} as const;

// Default OpenAPI Info
export const DEFAULT_OPENAPI_INFO = {
  title: 'AgentPass API',
  version: '1.0.0',
  description: 'API generated by AgentPass',
} as const;